{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "My Wallet API",
    "description": "API to serve My Wallet app. A digital wallet"
  },
  "host": "localhost",
  "basePath": "/",
  "schemes": ["http", "https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/auth/sign-up": {
      "post": {
        "tags": ["Users"],
        "description": "Route for register user.",
        "parameters": [
          {
            "name": "Register",
            "in": "body",
            "description": "Data for register user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/registerSchemaSwagger"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/auth/sign-in": {
      "post": {
        "tags": ["Users"],
        "description": "Route for user login.",
        "parameters": [
          {
            "name": "Login",
            "in": "body",
            "description": "User entry for login",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loginSchemaSwagger"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/logout/": {
      "delete": {
        "tags": ["Users"],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/transactions/": {
      "post": {
        "tags": ["Transactions"],
        "description": "Route to add user transactions.",
        "parameters": [
          {
            "name": "Add Transactions",
            "in": "body",
            "description": "Data to add a user transaction",
            "required": true,
            "schema": {
              "$ref": "#/definitions/transactionCreateSchemaSwagger"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      },
      "get": {
        "tags": ["Transactions"],
        "description": "Route to get all user transactions and balance.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/transactions/{id}": {
      "delete": {
        "tags": ["Transactions"],
        "description": "Route to delete a user transaction.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Transaction ID",
            "schema": {
              "$ref": "#/definitions/transactionParamsSchemaSwagger"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "tags": ["Transactions"],
        "description": "Route to update a user transaction.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Transaction ID",
            "schema": {
              "$ref": "#/definitions/transactionParamsSchemaSwagger"
            }
          },
          {
            "name": "Update a Transaction",
            "in": "body",
            "description": "Data to update a user transaction",
            "required": true,
            "schema": {
              "$ref": "#/definitions/transactionUpdateSchemaSwagger"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "registerSchemaSwagger": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "minLength": 3,
          "maxLength": 20
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "password": {
          "type": "string",
          "minLength": 6
        },
        "confirmPassword": {}
      },
      "required": ["username", "email", "password"],
      "additionalProperties": false
    },
    "loginSchemaSwagger": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "format": "email"
        },
        "password": {
          "type": "string",
          "minLength": 6
        }
      },
      "required": ["email", "password"],
      "additionalProperties": false
    },
    "transactionCreateSchemaSwagger": {
      "type": "object",
      "properties": {
        "valueInCents": {
          "type": "integer"
        },
        "description": {
          "type": "string",
          "minLength": 4,
          "maxLength": 30
        },
        "type": {
          "anyOf": [
            {
              "enum": ["incoming"]
            },
            {
              "enum": ["outgoing"]
            }
          ]
        },
        "date": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": ["valueInCents", "description", "type", "date"],
      "additionalProperties": false
    },
    "transactionUpdateSchemaSwagger": {
      "type": "object",
      "properties": {
        "valueInCents": {
          "type": "integer"
        },
        "description": {
          "type": "string",
          "minLength": 4,
          "maxLength": 30
        },
        "type": {
          "anyOf": [
            {
              "enum": ["incoming"]
            },
            {
              "enum": ["outgoing"]
            }
          ]
        },
        "date": {
          "type": "string",
          "format": "date-time"
        }
      },
      "additionalProperties": false
    },
    "transactionParamsSchemaSwagger": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "minLength": 24,
          "maxLength": 24
        }
      },
      "required": ["id"],
      "additionalProperties": false
    }
  }
}
